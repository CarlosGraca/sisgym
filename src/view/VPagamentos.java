/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControllerCliente;
import controller.ControllerPagamento;
import java.awt.Dimension;
import java.awt.event.ItemEvent;
import java.io.InputStream;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import model.Item;
import persistence.Conexao;

/**
 *
 * @author Carlos
 */
public class VPagamentos extends javax.swing.JInternalFrame {

    int janela = 0;
    int aux = 0;
    Calendar calendar = Calendar.getInstance();//Variable de Objeto Calendar
   
    ControllerPagamento controllerPagamento;
    ControllerCliente controllerCliente;
    String ultimoRegistro = null;
    String codPagamento = "";
    String ultimoCodPagamento = null;
    Conexao con;
    String codigoCliente;
    String control = null;
    public static String idCliente;
    public static String idMatricula;
    /**
     * Creates new form Teste
     */
    public VPagamentos() {
        initComponents();
        jbNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbNovo.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jbNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jbGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbGuardar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jbGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jbCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbCancelar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jbCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jbEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbEditar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jbEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jbApagar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbApagar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jbApagar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jbImprimir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbImprimir.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jbImprimir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        Date ds = new Date();
        jDateChooserDataFim.setDate(ds);   
        Calendar dtVencimento = Calendar.getInstance();
        int numeroDeDias = 30;
        dtVencimento.add(Calendar.DATE, -numeroDeDias);
        java.util.Date umMesAtras = dtVencimento.getTime();
        jDateChooserDataInicio.setDate(umMesAtras);
        
        jLabel2_cod.setVisible(false);
        jtPag_cod.setVisible(false);
        con = Login.con;
        getRootPane().setDefaultButton(jB_Pesquisa_pagamento);
        jTable_pagamento.setAutoCreateRowSorter(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jbNovo = new javax.swing.JButton();
        jbGuardar = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();
        jbApagar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbImprimir = new javax.swing.JButton();
        Jtab_pagamento = new javax.swing.JTabbedPane();
        tab_list = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_pagamento = new javax.swing.JTable();
        jDateChooserDataFim = new com.toedter.calendar.JDateChooser();
        jDateChooserDataInicio = new com.toedter.calendar.JDateChooser();
        jB_Pesquisa_pagamento = new javax.swing.JButton();
        jcbPag_mes_search = new javax.swing.JComboBox();
        jtCliente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        tab_novo = new javax.swing.JPanel();
        jLabel2_cod = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtPag_obs = new javax.swing.JTextArea();
        jtPag_cod = new javax.swing.JTextField();
        jtPag_valor = new javax.swing.JTextField();
        jcbPag_desc = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jcbPag_tipoPag = new javax.swing.JComboBox();
        jcbPag_mes = new javax.swing.JComboBox();
        jtPag_dataValidade = new com.toedter.calendar.JDateChooser();
        jtPag_data = new com.toedter.calendar.JDateChooser();
        jcbClientePagamento = new javax.swing.JComboBox();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Contas a Pagar");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Opções");

        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Add.png"))); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/salvar.png"))); // NOI18N
        jbGuardar.setText("Guardar");
        jbGuardar.setEnabled(false);
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Modify.png"))); // NOI18N
        jbEditar.setText("Editar");
        jbEditar.setEnabled(false);
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbApagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Remove.png"))); // NOI18N
        jbApagar.setText("Apagar");
        jbApagar.setEnabled(false);
        jbApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbApagarActionPerformed(evt);
            }
        });

        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Close.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setEnabled(false);
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Print.png"))); // NOI18N
        jbImprimir.setText("Imprimir");
        jbImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jbEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbApagar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbApagar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbImprimir)
                .addGap(20, 20, 20))
        );

        jTable_pagamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable_pagamento);

        jB_Pesquisa_pagamento.setText("Pesquisar");
        jB_Pesquisa_pagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_Pesquisa_pagamentoActionPerformed(evt);
            }
        });

        jcbPag_mes_search.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-- Mes --", "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Septembro", "Outubro", "Novembro", "Decembro" }));

        jLabel2.setText("Nome:");

        jLabel11.setText("Mês:");

        jLabel12.setText("Data Inicio:");

        jLabel13.setText("Data Fim:");

        javax.swing.GroupLayout tab_listLayout = new javax.swing.GroupLayout(tab_list);
        tab_list.setLayout(tab_listLayout);
        tab_listLayout.setHorizontalGroup(
            tab_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab_listLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
                    .addGroup(tab_listLayout.createSequentialGroup()
                        .addGroup(tab_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(tab_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDateChooserDataInicio, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                            .addComponent(jtCliente))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(tab_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(tab_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcbPag_mes_search, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDateChooserDataFim, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
                        .addGap(44, 44, 44)
                        .addComponent(jB_Pesquisa_pagamento)))
                .addContainerGap())
        );
        tab_listLayout.setVerticalGroup(
            tab_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tab_listLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab_listLayout.createSequentialGroup()
                        .addGroup(tab_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(9, 9, 9)
                        .addGroup(tab_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jDateChooserDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tab_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jB_Pesquisa_pagamento)
                        .addGroup(tab_listLayout.createSequentialGroup()
                            .addGroup(tab_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jcbPag_mes_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(tab_listLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel13)
                                .addComponent(jDateChooserDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Jtab_pagamento.addTab("Lista Pagamento", tab_list);

        jLabel2_cod.setText("Cod");

        jLabel3.setText("Cliente");

        jLabel4.setText("Descrição");

        jLabel5.setText("Valor");

        jLabel6.setText("Data ");

        jLabel7.setText("Data Validade");

        jLabel8.setText("Mês");

        jLabel9.setText("Observação");

        jtPag_obs.setColumns(20);
        jtPag_obs.setRows(5);
        jScrollPane2.setViewportView(jtPag_obs);

        jtPag_cod.setText("jTextField1");

        jcbPag_desc.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "Matricula", "Mensalidade", "Dia", "Semanal", "Consumo" }));

        jLabel10.setText("Tipo Pagamento");

        jcbPag_tipoPag.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "DINHEIRO", "CHEQUE", "VINTi4" }));

        jcbPag_mes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione...", "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Septembro", "Outubro", "Novembro", "Decembro" }));

        jcbClientePagamento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbClientePagamento.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbClientePagamentoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout tab_novoLayout = new javax.swing.GroupLayout(tab_novo);
        tab_novo.setLayout(tab_novoLayout);
        tab_novoLayout.setHorizontalGroup(
            tab_novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab_novoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tab_novoLayout.createSequentialGroup()
                        .addGroup(tab_novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2_cod, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(10, 10, 10)
                        .addGroup(tab_novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtPag_valor, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                            .addComponent(jtPag_data, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbPag_mes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbPag_desc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(tab_novoLayout.createSequentialGroup()
                                .addComponent(jtPag_cod, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jcbPag_tipoPag, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbClientePagamento, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtPag_dataValidade, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(tab_novoLayout.createSequentialGroup()
                        .addGroup(tab_novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tab_novoLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(0, 632, Short.MAX_VALUE))
                            .addComponent(jScrollPane2))
                        .addContainerGap())))
        );
        tab_novoLayout.setVerticalGroup(
            tab_novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tab_novoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tab_novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tab_novoLayout.createSequentialGroup()
                        .addGroup(tab_novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2_cod)
                            .addComponent(jtPag_cod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tab_novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jcbClientePagamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tab_novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jcbPag_desc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tab_novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jcbPag_tipoPag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tab_novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jtPag_valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addComponent(jLabel6))
                    .addGroup(tab_novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jtPag_data, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(tab_novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtPag_dataValidade, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))))
                .addGap(10, 10, 10)
                .addGroup(tab_novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jcbPag_mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );

        Jtab_pagamento.addTab("Dados Pagamento", tab_novo);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Jtab_pagamento)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Jtab_pagamento, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        controllerPagamento = new ControllerPagamento();
        controllerCliente = new ControllerCliente();
        controllerPagamento.upadateEstado();
        //controllerPagamento.preencherJTabelaPagamento();     
        Jtab_pagamento.setEnabledAt(1, false);
        
        String mes;
        String dataInicio = "";
        String dataFim = "";
        try{   
            jDateChooserDataInicio.getDate().getTime();
            jDateChooserDataFim.getDate().getTime();
            SimpleDateFormat formataData = new SimpleDateFormat("yyyy-MM-dd");        
            dataFim = formataData.format(jDateChooserDataFim.getDate());
            dataInicio = formataData.format(jDateChooserDataInicio.getDate()); 
        }catch(java.lang.NullPointerException ex){
            System.out.println("java.lang.NullPointerException");
        }
        if (jcbPag_mes_search.getSelectedIndex() == 0){
             mes="";
        }else{
            mes = String.valueOf(jcbPag_mes_search.getSelectedIndex());
        }
        controllerPagamento.pesquisaPagamento(jtCliente.getText(),mes ,dataInicio,dataFim,"Pagamento");
    }//GEN-LAST:event_formInternalFrameOpened

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        ativaDesativaBotao(false);
        jbNovo.setEnabled(false);
        jbCancelar.setEnabled(true);
        jbGuardar.setEnabled(true);
        desativa(false);
        ativarDesativarPagamentoCampos(true);
    }//GEN-LAST:event_jbEditarActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        janela = 0;
    }//GEN-LAST:event_formInternalFrameClosing

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        Jtab_pagamento.setEnabledAt(1, true);
        Jtab_pagamento.setSelectedComponent(tab_novo);
        ativaDesativaBotao(true);
        ativarDesativarPagamentoCampos(true);
        limparPagamentoCampos();
        jbNovo.setEnabled(false);
        control = "Novo";
        controllerPagamento.selectClienteComobox();
        jcbPag_desc.setSelectedIndex(2);
        jcbPag_tipoPag.setSelectedIndex(1);
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        codPagamento = codPagamento();
        Item selected_item = (Item) jcbClientePagamento.getSelectedItem();
        idMatricula = "1";
        if (jtPag_cod.getText().equals("")) {
            //calculaDataVencimento();
            if (validarCampos()) {
                if (controllerPagamento.manutencaoPagamento("inserir", jtPag_cod.getText(),selected_item.getId(), selected_item.getIdMatricula(), Principal.id, jcbPag_tipoPag.getSelectedItem().toString(), new java.sql.Date(jtPag_data.getDate().getTime()), new java.sql.Date(jtPag_dataValidade.getDate().getTime()), jtPag_obs.getText(), jcbPag_desc.getSelectedItem().toString(), codPagamento, true, jcbPag_mes.getSelectedIndex())) {
                    emitirRecibo(codPagamento);
                    ativarDesativarPagamentoCampos(false);
                    limparPagamentoCampos();
                    ativaDesativaBotao(false);
                    Jtab_pagamento.setSelectedComponent(tab_list);
                }
            }
        } else {
            if (validarCampos()) {
                if (controllerPagamento.manutencaoPagamento("editar", jtPag_cod.getText(), (selected_item.getId()), Integer.parseInt(idMatricula), Principal.id, jcbPag_tipoPag.getSelectedItem().toString(), new java.sql.Date(jtPag_data.getDate().getTime()), new java.sql.Date(jtPag_dataValidade.getDate().getTime()), jtPag_obs.getText(), jcbPag_desc.getSelectedItem().toString(), codPagamento, true, jcbPag_mes.getSelectedIndex())) {
                    emitirRecibo(codPagamento);
                    ativarDesativarPagamentoCampos(false);
                    limparPagamentoCampos();
                    ativaDesativaBotao(false);
                }
            }
        }

    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        limparPagamentoCampos();
        jbGuardar.setEnabled(false);
        jbCancelar.setEnabled(false);
        ativarDesativarPagamentoCampos(false);
        jbNovo.setEnabled(true);
        ativaDesativaBotao(false);
        Jtab_pagamento.setSelectedIndex(0);
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbApagarActionPerformed
       codPagamento = codPagamento();
        controllerPagamento.manutencaoPagamento("update", jtPag_cod.getText(), Integer.parseInt(idCliente), Integer.parseInt(idMatricula), Principal.id, jcbPag_tipoPag.getSelectedItem().toString(), new java.sql.Date(jtPag_data.getDate().getTime()), new java.sql.Date(jtPag_dataValidade.getDate().getTime()), "Pagamento Cancelado", jcbPag_desc.getSelectedItem().toString(), codPagamento, false, jcbPag_mes.getSelectedIndex());
        ativarDesativarPagamentoCampos(false);
        limparPagamentoCampos();
        ativaDesativaBotao(false);
        Jtab_pagamento.setSelectedIndex(0);
        desativa(false);
    }//GEN-LAST:event_jbApagarActionPerformed
     public void desativa(Boolean habilitar) {
        jbEditar.setEnabled(habilitar);
        jbApagar.setEnabled(habilitar);
    }
    private void jbImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimirActionPerformed
        String nomeCliente = "Imprimir a lista de todos os pagamentos do ginásio ";
        int opcaoEscolhida = JOptionPane.showConfirmDialog(null, nomeCliente, "Confirmacão Impressão ", JOptionPane.YES_OPTION);
        if (opcaoEscolhida == JOptionPane.YES_OPTION) {
            InputStream caminho = getClass().getResourceAsStream("/relatorios/RPagamento.jrxml");
            con.EjecutarReporteStream(caminho);
        }
    }//GEN-LAST:event_jbImprimirActionPerformed

    private void jcbClientePagamentoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbClientePagamentoItemStateChanged
       if(control.equals("Novo")){
            if (evt.getStateChange() == ItemEvent.SELECTED) {
                try{
                Item selected_item = (Item) jcbClientePagamento.getSelectedItem();                
                int valor = controllerPagamento.getValorPagamento(selected_item.getIdMatricula(),selected_item.getId());
                jtPag_valor.setText(String.valueOf(valor));
                }catch(java.lang.ClassCastException ex){
                    System.out.println("ok");
                }
            } /*else if (evt.getStateChange() == ItemEvent.DESELECTED) {
                Item selected_item = (Item) jcbClientePagamento.getSelectedItem();
                System.out.println(""+selected_item.getIdMatricula());
            }*/
       }
    }//GEN-LAST:event_jcbClientePagamentoItemStateChanged

    private void jB_Pesquisa_pagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_Pesquisa_pagamentoActionPerformed
        String mes;
        String dataInicio = "";
        String dataFim = "";
        try{   
            jDateChooserDataInicio.getDate().getTime();
            jDateChooserDataFim.getDate().getTime();
            SimpleDateFormat formataData = new SimpleDateFormat("yyyy-MM-dd");        
            dataFim = formataData.format(jDateChooserDataFim.getDate());
            dataInicio = formataData.format(jDateChooserDataInicio.getDate()); 
        }catch(java.lang.NullPointerException ex){
            System.out.println("java.lang.NullPointerException");
        }
        if (jcbPag_mes_search.getSelectedIndex() == 0){
             mes="";
        }else{
            mes = String.valueOf(jcbPag_mes_search.getSelectedIndex());
        }
        controllerPagamento.pesquisaPagamento(jtCliente.getText(),mes ,dataInicio,dataFim,"Pagamento");
    }//GEN-LAST:event_jB_Pesquisa_pagamentoActionPerformed
    public void imprimirRelatorio(String rel, String text) {    
        String nomeCliente = "Imprimir a lista de todos os produtos do ginásio " + text;
        int opcaoEscolhida = JOptionPane.showConfirmDialog(null, nomeCliente, "Confirmacão Inpressao ", JOptionPane.YES_OPTION);

        if (opcaoEscolhida == JOptionPane.YES_OPTION) {
            InputStream caminho = getClass().getResourceAsStream("/"+ rel);
            con.EjecutarReporte(caminho);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTabbedPane Jtab_pagamento;
    private javax.swing.JButton jB_Pesquisa_pagamento;
    private com.toedter.calendar.JDateChooser jDateChooserDataFim;
    private com.toedter.calendar.JDateChooser jDateChooserDataInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel2_cod;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    public static javax.swing.JTable jTable_pagamento;
    private javax.swing.JButton jbApagar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbImprimir;
    private javax.swing.JButton jbNovo;
    public static javax.swing.JComboBox jcbClientePagamento;
    public static javax.swing.JComboBox jcbPag_desc;
    public static javax.swing.JComboBox jcbPag_mes;
    public static javax.swing.JComboBox jcbPag_mes_search;
    public static javax.swing.JComboBox jcbPag_tipoPag;
    public static javax.swing.JTextField jtCliente;
    public static javax.swing.JTextField jtPag_cod;
    public static com.toedter.calendar.JDateChooser jtPag_data;
    public static com.toedter.calendar.JDateChooser jtPag_dataValidade;
    public static javax.swing.JTextArea jtPag_obs;
    public static javax.swing.JTextField jtPag_valor;
    private javax.swing.JPanel tab_list;
    private javax.swing.JPanel tab_novo;
    // End of variables declaration//GEN-END:variables
   public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    private boolean validarCampos() {
        if (jcbPag_desc.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Descrição é obrigatório !");
            jcbPag_desc.requestFocus();
            return false;
        } else if (jtPag_valor.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Preço é obrigatório !");
            jtPag_valor.requestFocus();
            return false;
        } else if (jcbPag_tipoPag.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Tipo moeda é obrigatório !");
            jcbPag_tipoPag.requestFocus();
            return false;
        }
        return true;
    }

    public void ativaDesativaBotao(Boolean habilitar) {
        jbGuardar.setEnabled(habilitar);
        jbNovo.setEnabled(!habilitar);
        jbCancelar.setEnabled(habilitar);
    }

    public void ativarDesativarPagamentoCampos(boolean habilitar) {
        jtPag_data.setEnabled(habilitar);
        jtPag_dataValidade.setEnabled(habilitar);
        jtPag_valor.setEditable(habilitar);
        jtPag_obs.setEditable(habilitar);
        jcbPag_desc.setEnabled(habilitar);
        jcbPag_tipoPag.setEnabled(habilitar);
        jcbPag_mes.setEditable(habilitar);
        jcbClientePagamento.setEnabled(habilitar);
        jcbPag_mes.setEnabled(habilitar);
    }

    public void limparPagamentoCampos() {
        jtPag_cod.setText("");
        jtPag_dataValidade.setDate(null);
        jtPag_data.setDate(null);
        jtPag_valor.setText("");
        jtPag_obs.setText("");
        jcbPag_desc.setSelectedIndex(0);
        jcbPag_mes.setSelectedIndex(0);
        jcbClientePagamento.setSelectedIndex(0);
        jcbPag_tipoPag.setSelectedIndex(0);
    }

//    public void selectCliente() {
//        DAOCliente DAO = new DAOCliente();
//
//        try {
//            obj_cliente = DAO.pesquisarClienteComo(jcClientePagamento);
//
//        } catch (SQLException erro) {
//            JOptionPane.showMessageDialog(this, "Erro : " + erro.getMessage());
//        }
//    }
    
    public boolean bissexto(int ano) {
        int aa = 0;
        if ((aa % 400 == 0) || (aa % 4 == 0) && (aa % 100) != 0) {
            return (true);
        } else {
            return (false);
        }
    }

    public void calculaDataVencimento() {
        boolean bool;
        Calendar dtVencimento = Calendar.getInstance();
        if ((Calendar.MONTH == Calendar.JANUARY) || (Calendar.MONTH == Calendar.MARCH) || (Calendar.MONTH == Calendar.MAY) || (Calendar.MONTH == Calendar.JULY) || (Calendar.MONTH == Calendar.AUGUST) || (Calendar.MONTH == Calendar.OCTOBER) || (Calendar.MONTH == Calendar.DECEMBER)) {
            dtVencimento.add(Calendar.DAY_OF_YEAR, 31);
        } else if ((Calendar.MONTH == Calendar.APRIL) || (Calendar.MONTH == Calendar.JUNE) || (Calendar.MONTH == Calendar.SEPTEMBER) || (Calendar.MONTH == Calendar.NOVEMBER)) {
            dtVencimento.add(Calendar.DAY_OF_YEAR, 30);
        } else if (Calendar.MONTH == Calendar.FEBRUARY) {
            int ano = dtVencimento.get(Calendar.YEAR);
            bool = bissexto(ano);
            if (bool == true) {
                dtVencimento.add(Calendar.DAY_OF_YEAR, 29);
            } else {
                dtVencimento.add(Calendar.DAY_OF_YEAR, 28);
            }
        }
        Date vencimento = dtVencimento.getTime();
        jtPag_dataValidade.setDate(vencimento);
    }

    public String codPagamento() {
        try {
            int ano;
            Calendar dtAnoPagamento = Calendar.getInstance();
            ano = dtAnoPagamento.get(Calendar.YEAR);
            if (jTable_pagamento.getRowCount() == 0) {
                int i = 1;
                codPagamento = i + "/" + ano;
            } else {
                ultimoCodPagamento = controllerPagamento.getUltimoRegistro().getString("idPagamento");
                int idPagamento = Integer.parseInt(ultimoCodPagamento);
                idPagamento = idPagamento + 1;
                codPagamento = idPagamento + "/" + ano;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
        return codPagamento;
    }

    public void emitirRecibo(String cod) {
        String text = "Imprimir este recibo de pagamento ";
        int opcaoEscolhida = JOptionPane.showConfirmDialog(null, text, "Confirmacão Inpressao ", JOptionPane.YES_OPTION);
        if (opcaoEscolhida == JOptionPane.YES_OPTION) {
            InputStream caminho = getClass().getResourceAsStream("/relatorios/RRecibo.jrxml");
            con.EjectuarReporteFiltroString(cod, "idPag", caminho);
        }
    }
   /* class ItemChangeListener implements ItemListener{
        @Override
        public void itemStateChanged(ItemEvent event) {
           if (event.getStateChange() == ItemEvent.SELECTED) {
             // Object item = event.getItem();
              // do something with object
              Item selected_item = (Item) jcbClientePagamento.getSelectedItem();
               System.out.println(selected_item.getId());
           }
        }       
    }*/
}

  
