package view;

import controller.ControllerLog;
import controller.ControllerUtilizador;
import java.awt.Desktop;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.InputStream;
import java.net.URL;
import java.sql.SQLException;
import java.text.DateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import persistence.Conexao;
import static view.VEnviandoEmail.jLFromEmail;
import static view.VEnviandoEmail.tfPara;

public class Principal extends javax.swing.JFrame {

    public static int id;
    VCliente obj;
    VClienteRelatorio obj1;
    VSobre obj2;
    VLog obj3;
    VMatricula obj4;
    VModalidade obj5;
    VPagamentos obj6;
    VFuncionario obj7;
    VPresenca obj8;
    VProduto obj9;
    VVenda obj10;
    VEquipamento obj11;
    VEmpresa obj12;
    VUtilizador obj13;
    VEmail obj14;
    VEnviandoEmail obj16;
    JDialogListaCliente obj15;
    VExecutarBackup obj17;
    VJDialogRecebimento obj18;
    VJDialogConexao obj19;
    VGestRecibo obj20;
    ControllerUtilizador ut;
    ControllerLog logController;
    Image img;
    public String acao = null;
    public static String hora2 = null;
    Date ds;

    Conexao con = Login.con;

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        URL url = this.getClass().getResource("/imagem/logo.png");
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(url));
        obj = new VCliente();
        obj1 = new VClienteRelatorio();
        obj2 = new VSobre();
        obj3 = new VLog();
        obj4 = new VMatricula();
        obj5 = new VModalidade();
        obj6 = new VPagamentos();
        obj7 = new VFuncionario();
        obj8 = new VPresenca();
        obj9 = new VProduto();
        obj10 = new VVenda();
        obj11 = new VEquipamento();
        obj12 = new VEmpresa();
        obj13 = new VUtilizador();
        obj14 = new VEmail();
        obj16 = new VEnviandoEmail();
        obj15 = new JDialogListaCliente(this, true);
        obj17 = new VExecutarBackup(this, true);
        obj18 = new VJDialogRecebimento(this, true);
        obj19 = new VJDialogConexao(this, true);
        obj20 = new VGestRecibo();
        ut = new ControllerUtilizador();
        logController = new ControllerLog();
        ds = new Date();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu10 = new javax.swing.JMenu();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jlDate = new javax.swing.JLabel();
        jtUtilizador = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jlDiasVecimento = new javax.swing.JLabel();
        jdpPrincipal = new javax.swing.JDesktopPane();
        panelImage3 = new org.edisoncor.gui.panel.PanelImage();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        jbPagamento = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        jbPresenca = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jbModalidadel = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        jbEmail1 = new javax.swing.JButton();
        jSeparator10 = new javax.swing.JToolBar.Separator();
        jbEmail = new javax.swing.JButton();
        panelImage1 = new org.edisoncor.gui.panel.PanelImage();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmSair = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jmCliente = new javax.swing.JMenuItem();
        jmFuncionario = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jmEquip = new javax.swing.JMenuItem();
        jmModalidade = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        jmProduto = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jEmitecartao = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        jmVenda = new javax.swing.JMenuItem();
        jSeparator8 = new javax.swing.JPopupMenu.Separator();
        jmPag = new javax.swing.JMenuItem();
        jmEmiteFatura = new javax.swing.JMenuItem();
        jSeparator11 = new javax.swing.JPopupMenu.Separator();
        jMPresenca = new javax.swing.JMenuItem();
        jMEnviaEmail = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        jmRelCliente = new javax.swing.JMenuItem();
        jMFuncionario = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JPopupMenu.Separator();
        jMREquipamentos = new javax.swing.JMenuItem();
        jMManutencao = new javax.swing.JMenuItem();
        jSeparator12 = new javax.swing.JPopupMenu.Separator();
        jMRModalidades = new javax.swing.JMenuItem();
        jMRelRecimento = new javax.swing.JMenuItem();
        jMRLog = new javax.swing.JMenuItem();
        jMRProduto = new javax.swing.JMenuItem();
        jMRVenda = new javax.swing.JMenuItem();
        jSeparator13 = new javax.swing.JPopupMenu.Separator();
        jMRPresenca = new javax.swing.JMenuItem();
        jMenu9 = new javax.swing.JMenu();
        jMLog = new javax.swing.JMenuItem();
        jMCopySecurity = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jmUtilizadores = new javax.swing.JMenuItem();
        jmSistema = new javax.swing.JMenuItem();
        jmConfEmail = new javax.swing.JMenuItem();
        jMDefinicões = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem14 = new javax.swing.JMenuItem();
        jmSobre = new javax.swing.JMenuItem();
        jMFeedBack = new javax.swing.JMenuItem();

        jMenu10.setText("jMenu10");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("MCSolution - Sistema de Gestão de Ginásio Versão 1.0.5");
        setIconImages(null);
        setMinimumSize(new java.awt.Dimension(405, 0));
        setName("FormPrincipal"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Utilizador:");

        jlDate.setText("date");

        jtUtilizador.setText("Graça&Fortes");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Validade:  ");

        jlDiasVecimento.setText("jLabel3");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlDate, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlDiasVecimento, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 407, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtUtilizador, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jlDate)
                    .addComponent(jtUtilizador)
                    .addComponent(jLabel2)
                    .addComponent(jlDiasVecimento))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jdpPrincipal.setBackground(new java.awt.Color(204, 204, 204));

        panelImage3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/nameApplication.fw.png"))); // NOI18N
        panelImage3.setPreferredSize(new java.awt.Dimension(322, 55));

        javax.swing.GroupLayout panelImage3Layout = new javax.swing.GroupLayout(panelImage3);
        panelImage3.setLayout(panelImage3Layout);
        panelImage3Layout.setHorizontalGroup(
            panelImage3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelImage3Layout.setVerticalGroup(
            panelImage3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 55, Short.MAX_VALUE)
        );

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setToolTipText("");
        jToolBar1.setName("Botões Rápidas"); // NOI18N

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/User.png"))); // NOI18N
        jButton1.setToolTipText("Clientes");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setMaximumSize(new java.awt.Dimension(60, 45));
        jButton1.setMinimumSize(new java.awt.Dimension(60, 45));
        jButton1.setPreferredSize(new java.awt.Dimension(60, 45));
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);
        jToolBar1.add(jSeparator1);

        jbPagamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Accounting.png"))); // NOI18N
        jbPagamento.setToolTipText("Pagamento");
        jbPagamento.setFocusable(false);
        jbPagamento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbPagamento.setMaximumSize(new java.awt.Dimension(60, 45));
        jbPagamento.setMinimumSize(new java.awt.Dimension(60, 45));
        jbPagamento.setPreferredSize(new java.awt.Dimension(60, 45));
        jbPagamento.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPagamentoActionPerformed(evt);
            }
        });
        jToolBar1.add(jbPagamento);
        jToolBar1.add(jSeparator2);

        jbPresenca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/List.png"))); // NOI18N
        jbPresenca.setToolTipText("Registro de presença");
        jbPresenca.setFocusable(false);
        jbPresenca.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbPresenca.setMaximumSize(new java.awt.Dimension(60, 45));
        jbPresenca.setMinimumSize(new java.awt.Dimension(60, 45));
        jbPresenca.setPreferredSize(new java.awt.Dimension(60, 45));
        jbPresenca.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbPresenca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPresencaActionPerformed(evt);
            }
        });
        jToolBar1.add(jbPresenca);
        jToolBar1.add(jSeparator3);

        jbModalidadel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/modal.jpg"))); // NOI18N
        jbModalidadel.setToolTipText("Modalidades");
        jbModalidadel.setFocusable(false);
        jbModalidadel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbModalidadel.setMaximumSize(new java.awt.Dimension(60, 45));
        jbModalidadel.setMinimumSize(new java.awt.Dimension(60, 45));
        jbModalidadel.setPreferredSize(new java.awt.Dimension(60, 45));
        jbModalidadel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbModalidadel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModalidadelActionPerformed(evt);
            }
        });
        jToolBar1.add(jbModalidadel);
        jToolBar1.add(jSeparator4);

        jbEmail1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Dollar.png"))); // NOI18N
        jbEmail1.setToolTipText("Lista de recebimento");
        jbEmail1.setFocusable(false);
        jbEmail1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbEmail1.setMaximumSize(new java.awt.Dimension(60, 45));
        jbEmail1.setMinimumSize(new java.awt.Dimension(60, 45));
        jbEmail1.setPreferredSize(new java.awt.Dimension(60, 45));
        jbEmail1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbEmail1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEmail1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jbEmail1);
        jToolBar1.add(jSeparator10);

        jbEmail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/E-mail.png"))); // NOI18N
        jbEmail.setToolTipText("Enviar e-mail");
        jbEmail.setFocusable(false);
        jbEmail.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbEmail.setMaximumSize(new java.awt.Dimension(60, 45));
        jbEmail.setMinimumSize(new java.awt.Dimension(60, 45));
        jbEmail.setPreferredSize(new java.awt.Dimension(60, 45));
        jbEmail.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEmailActionPerformed(evt);
            }
        });
        jToolBar1.add(jbEmail);

        panelImage1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/fundo1.jpg"))); // NOI18N

        javax.swing.GroupLayout panelImage1Layout = new javax.swing.GroupLayout(panelImage1);
        panelImage1.setLayout(panelImage1Layout);
        panelImage1Layout.setHorizontalGroup(
            panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panelImage1Layout.setVerticalGroup(
            panelImage1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 210, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jdpPrincipalLayout = new javax.swing.GroupLayout(jdpPrincipal);
        jdpPrincipal.setLayout(jdpPrincipalLayout);
        jdpPrincipalLayout.setHorizontalGroup(
            jdpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelImage3, javax.swing.GroupLayout.DEFAULT_SIZE, 876, Short.MAX_VALUE)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelImage1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jdpPrincipalLayout.setVerticalGroup(
            jdpPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jdpPrincipalLayout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(panelImage3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(panelImage1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(35, 35, 35))
        );
        jdpPrincipal.setLayer(panelImage3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jdpPrincipal.setLayer(jToolBar1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jdpPrincipal.setLayer(panelImage1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jMenu1.setMnemonic('F');
        jMenu1.setText("Ficherio");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jmSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jmSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Exit.png"))); // NOI18N
        jmSair.setText("Sair");
        jmSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmSairActionPerformed(evt);
            }
        });
        jMenu1.add(jmSair);

        jMenuBar1.add(jMenu1);

        jMenu5.setMnemonic('R');
        jMenu5.setText("Registar");

        jmCliente.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jmCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/group.png"))); // NOI18N
        jmCliente.setText("Clientes");
        jmCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmClienteActionPerformed(evt);
            }
        });
        jMenu5.add(jmCliente);

        jmFuncionario.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        jmFuncionario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Boss.png"))); // NOI18N
        jmFuncionario.setText("Funcionários");
        jmFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmFuncionarioActionPerformed(evt);
            }
        });
        jMenu5.add(jmFuncionario);
        jMenu5.add(jSeparator5);

        jmEquip.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jmEquip.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Equipment.png"))); // NOI18N
        jmEquip.setText("Equipamentos");
        jmEquip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmEquipActionPerformed(evt);
            }
        });
        jMenu5.add(jmEquip);

        jmModalidade.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.CTRL_MASK));
        jmModalidade.setText("Modalidades");
        jmModalidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmModalidadeActionPerformed(evt);
            }
        });
        jMenu5.add(jmModalidade);
        jMenu5.add(jSeparator6);

        jmProduto.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jmProduto.setText("Produtos");
        jmProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmProdutoActionPerformed(evt);
            }
        });
        jMenu5.add(jmProduto);

        jMenuBar1.add(jMenu5);

        jMenu2.setMnemonic('M');
        jMenu2.setText("Movimentos");

        jEmitecartao.setText("Emissão Cartão");
        jEmitecartao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEmitecartaoActionPerformed(evt);
            }
        });
        jMenu2.add(jEmitecartao);
        jMenu2.add(jSeparator7);

        jmVenda.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jmVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Shopping.png"))); // NOI18N
        jmVenda.setText("Venda");
        jmVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmVendaActionPerformed(evt);
            }
        });
        jMenu2.add(jmVenda);
        jMenu2.add(jSeparator8);

        jmPag.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Account.png"))); // NOI18N
        jmPag.setText("Processar Pagamento");
        jmPag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmPagActionPerformed(evt);
            }
        });
        jMenu2.add(jmPag);

        jmEmiteFatura.setText("Emissão Fatura/Recibo");
        jmEmiteFatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmEmiteFaturaActionPerformed(evt);
            }
        });
        jMenu2.add(jmEmiteFatura);
        jMenu2.add(jSeparator11);

        jMPresenca.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMPresenca.setText("Presença");
        jMPresenca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMPresencaActionPerformed(evt);
            }
        });
        jMenu2.add(jMPresenca);

        jMEnviaEmail.setText("Enviar Email");
        jMEnviaEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMEnviaEmailActionPerformed(evt);
            }
        });
        jMenu2.add(jMEnviaEmail);

        jMenuBar1.add(jMenu2);

        jMenu8.setMnemonic('e');
        jMenu8.setText("Relátorios");
        jMenu8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu8ActionPerformed(evt);
            }
        });

        jmRelCliente.setText("Clientes");
        jmRelCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmRelClienteActionPerformed(evt);
            }
        });
        jMenu8.add(jmRelCliente);

        jMFuncionario.setText("Funcionários");
        jMFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMFuncionarioActionPerformed(evt);
            }
        });
        jMenu8.add(jMFuncionario);
        jMenu8.add(jSeparator9);

        jMREquipamentos.setText("Equipamentos");
        jMREquipamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMREquipamentosActionPerformed(evt);
            }
        });
        jMenu8.add(jMREquipamentos);

        jMManutencao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Wrench.png"))); // NOI18N
        jMManutencao.setText("Manutenção");
        jMManutencao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMManutencaoActionPerformed(evt);
            }
        });
        jMenu8.add(jMManutencao);
        jMenu8.add(jSeparator12);

        jMRModalidades.setText("Modalidades");
        jMRModalidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMRModalidadesActionPerformed(evt);
            }
        });
        jMenu8.add(jMRModalidades);

        jMRelRecimento.setText("Recebimento");
        jMRelRecimento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMRelRecimentoActionPerformed(evt);
            }
        });
        jMenu8.add(jMRelRecimento);

        jMRLog.setText("LOG");
        jMRLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMRLogActionPerformed(evt);
            }
        });
        jMenu8.add(jMRLog);

        jMRProduto.setText("Produto");
        jMRProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMRProdutoActionPerformed(evt);
            }
        });
        jMenu8.add(jMRProduto);

        jMRVenda.setText("Venda");
        jMRVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMRVendaActionPerformed(evt);
            }
        });
        jMenu8.add(jMRVenda);
        jMenu8.add(jSeparator13);

        jMRPresenca.setText("Presença");
        jMRPresenca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMRPresencaActionPerformed(evt);
            }
        });
        jMenu8.add(jMRPresenca);

        jMenuBar1.add(jMenu8);

        jMenu9.setMnemonic('u');
        jMenu9.setText("Auxiliares");

        jMLog.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/log.png"))); // NOI18N
        jMLog.setText("Log");
        jMLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMLogActionPerformed(evt);
            }
        });
        jMenu9.add(jMLog);

        jMCopySecurity.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Database.png"))); // NOI18N
        jMCopySecurity.setText("Copia Segurança");
        jMCopySecurity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMCopySecurityActionPerformed(evt);
            }
        });
        jMenu9.add(jMCopySecurity);

        jMenuBar1.add(jMenu9);

        jMenu6.setMnemonic('P');
        jMenu6.setText("Parâmetros");

        jmUtilizadores.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_MASK));
        jmUtilizadores.setText("Usuários do Sistema");
        jmUtilizadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmUtilizadoresActionPerformed(evt);
            }
        });
        jMenu6.add(jmUtilizadores);

        jmSistema.setText("Sistema");
        jmSistema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmSistemaActionPerformed(evt);
            }
        });
        jMenu6.add(jmSistema);

        jmConfEmail.setText("Configurações de Email");
        jmConfEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmConfEmailActionPerformed(evt);
            }
        });
        jMenu6.add(jmConfEmail);

        jMDefinicões.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Gears.png"))); // NOI18N
        jMDefinicões.setText("Configurações de Conexão");
        jMDefinicões.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMDefinicõesActionPerformed(evt);
            }
        });
        jMenu6.add(jMDefinicões);

        jMenuBar1.add(jMenu6);

        jMenu4.setMnemonic('A');
        jMenu4.setText("Ajuda");

        jMenuItem14.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Question - Bold.png"))); // NOI18N
        jMenuItem14.setText("Tópicos de Ajuda");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem14);

        jmSobre.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jmSobre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Info2.png"))); // NOI18N
        jmSobre.setText("Sobre SGG");
        jmSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmSobreActionPerformed(evt);
            }
        });
        jMenu4.add(jmSobre);

        jMFeedBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Hint.png"))); // NOI18N
        jMFeedBack.setText("Feedback");
        jMFeedBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMFeedBackActionPerformed(evt);
            }
        });
        jMenu4.add(jMFeedBack);

        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jdpPrincipal)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jdpPrincipal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.setExtendedState(MAXIMIZED_BOTH);
        DateFormat df = DateFormat.getDateInstance(DateFormat.FULL);
        jlDate.setText(df.format(ds));
    }//GEN-LAST:event_formWindowOpened

    private void jmSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmSairActionPerformed
        try {
            sairPrograma();
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jmSairActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            sairPrograma();
        } catch (SQLException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_formWindowClosing

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed

    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openCliente();
        } else if (ut.verificaAcesso(jmCliente.getText(), Principal.id)) {
            openCliente();
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jmClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmClienteActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openCliente();
        } else if (ut.verificaAcesso(jmCliente.getText(), Principal.id)) {
            openCliente();
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }

    }//GEN-LAST:event_jmClienteActionPerformed

    private void jbPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPagamentoActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openPagamento();
        } else if (ut.verificaAcesso(jmPag.getText(), Principal.id)) {
            openPagamento();
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }

    }//GEN-LAST:event_jbPagamentoActionPerformed

    private void jmRelClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmRelClienteActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openClienteRelatorio();
        } else if (ut.verificaAcesso("R " + jmRelCliente.getText(), Principal.id)) {
            openClienteRelatorio();
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jmRelClienteActionPerformed

    private void jmSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmSobreActionPerformed
        openSobre();
    }//GEN-LAST:event_jmSobreActionPerformed

    private void jMLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMLogActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openLog();
        } else if (ut.verificaAcesso(jMLog.getText(), Principal.id)) {
            openLog();
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jMLogActionPerformed

    private void jmModalidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmModalidadeActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openModaliade();
        } else if (ut.verificaAcesso(jmModalidade.getText(), Principal.id)) {
            openModaliade();
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jmModalidadeActionPerformed

    private void jmFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmFuncionarioActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openFuncionario();
        } else if (ut.verificaAcesso(jmFuncionario.getText(), Principal.id)) {
            openFuncionario();
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jmFuncionarioActionPerformed

    private void jmSistemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmSistemaActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openEmpresa();
        } else if (ut.verificaAcesso(jmSistema.getText(), Principal.id)) {
            openEmpresa();
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jmSistemaActionPerformed

    private void jmPagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmPagActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openPagamento();
        } else if (ut.verificaAcesso(jmPag.getText(), Principal.id)) {
            openPagamento();
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jmPagActionPerformed

    private void jbPresencaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPresencaActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openPresenca();
        } else if (ut.verificaAcesso(jMPresenca.getText(), Principal.id)) {
            openPresenca();
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jbPresencaActionPerformed

    private void jmVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmVendaActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openVenda();
        } else if (ut.verificaAcesso(jmVenda.getText(), Principal.id)) {
            openVenda();
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jmVendaActionPerformed

    private void jmProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmProdutoActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openProduto();
        } else if (ut.verificaAcesso(jmProduto.getText(), Principal.id)) {
            openProduto();
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jmProdutoActionPerformed

    private void jmEquipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmEquipActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openEquipamento();
        } else if (ut.verificaAcesso(jmEquip.getText(), Principal.id)) {
            openEquipamento();
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jmEquipActionPerformed

    private void jmUtilizadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmUtilizadoresActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openUtilizadores();
        } else if (ut.verificaAcesso(jmUtilizadores.getText(), Principal.id)) {
            openUtilizadores();
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jmUtilizadoresActionPerformed

    private void jmConfEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmConfEmailActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openEmail();
        } else if (ut.verificaAcesso(jmConfEmail.getText(), Principal.id)) {
            openEmail();
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jmConfEmailActionPerformed

    private void jEmitecartaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEmitecartaoActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            obj15.setVisible(true);
        } else if (ut.verificaAcesso(jEmitecartao.getText(), Principal.id)) {
            obj15.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jEmitecartaoActionPerformed

    private void jbModalidadelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModalidadelActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openModaliade();
        } else if (ut.verificaAcesso(jmModalidade.getText(), Principal.id)) {
            openModaliade();
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jbModalidadelActionPerformed

    private void jbEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEmailActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openEnviandoEmail(true);
        } else if (ut.verificaAcesso(jMEnviaEmail.getText(), Principal.id)) {
            openEnviandoEmail(true);
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jbEmailActionPerformed

    private void jbEmail1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEmail1ActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            obj18.setVisible(true);
        } else if (ut.verificaAcesso("R " + jMRelRecimento.getText(), Principal.id)) {
            obj18.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jbEmail1ActionPerformed

    private void jMCopySecurityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMCopySecurityActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            obj17.setVisible(true);
        } else if (ut.verificaAcesso(jMCopySecurity.getText(), Principal.id)) {
            obj17.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }

    }//GEN-LAST:event_jMCopySecurityActionPerformed

    private void jmEmiteFaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmEmiteFaturaActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openGestRecibo();
        } else if (ut.verificaAcesso(jmEmiteFatura.getText(), Principal.id)) {
            openGestRecibo();
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jmEmiteFaturaActionPerformed

    private void jMFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMFuncionarioActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            String nomeCliente = "Imprimir a lista de todos os Funcionário do ginásio ";
            int opcaoEscolhida = JOptionPane.showConfirmDialog(null, nomeCliente, "Confirmacão Impressão?", JOptionPane.YES_OPTION);
            if (opcaoEscolhida == JOptionPane.YES_OPTION) {
                InputStream caminho = getClass().getResourceAsStream("/relatorios/RFuncionarios.jrxml");
                con.EjecutarReporteStream(caminho);
            }
        } else if (ut.verificaAcesso("R " + jMFuncionario.getText(), Principal.id)) {
            String nomeCliente = "Imprimir a lista de todos os Funcionário do ginásio ";
            int opcaoEscolhida = JOptionPane.showConfirmDialog(null, nomeCliente, "Confirmacão Impressão?", JOptionPane.YES_OPTION);
            if (opcaoEscolhida == JOptionPane.YES_OPTION) {
                InputStream caminho = getClass().getResourceAsStream("/relatorios/RFuncionarios.jrxml");
                con.EjecutarReporteStream(caminho);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jMFuncionarioActionPerformed

    private void jMRelRecimentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMRelRecimentoActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            obj18.setVisible(true);
        } else if (ut.verificaAcesso("R " + jMRelRecimento.getText(), Principal.id)) {
            obj18.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }

    }//GEN-LAST:event_jMRelRecimentoActionPerformed

    private void jMManutencaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMManutencaoActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            //obj18.setVisible(true);
        } else if (ut.verificaAcesso("R " + jMManutencao.getText(), Principal.id)) {
            //obj17.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jMManutencaoActionPerformed

    private void jMPresencaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMPresencaActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openPresenca();
        } else if (ut.verificaAcesso(jMPresenca.getText(), Principal.id)) {
            openPresenca();
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jMPresencaActionPerformed

    private void jMEnviaEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMEnviaEmailActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openEnviandoEmail(true);
        } else if (ut.verificaAcesso(jMEnviaEmail.getText(), Principal.id)) {
            openEnviandoEmail(true);
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jMEnviaEmailActionPerformed

    private void jMRProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMRProdutoActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            String nomeCliente = "Imprimir a lista de todos os produtos do ginásio";
            int opcaoEscolhida = JOptionPane.showConfirmDialog(null, nomeCliente, "Confirmacão Inpressao ", JOptionPane.YES_OPTION);
            if (opcaoEscolhida == JOptionPane.YES_OPTION) {
                InputStream caminho = getClass().getResourceAsStream("/relatorios/RProduto.jrxml");
                con.EjecutarReporte(caminho);
            }
        }
        if (ut.verificaAcesso("R " + jMRProduto.getText(), Principal.id)) {
            String nomeCliente = "Imprimir a lista de todos os produtos do ginásio";
            int opcaoEscolhida = JOptionPane.showConfirmDialog(null, nomeCliente, "Confirmacão Inpressao ", JOptionPane.YES_OPTION);
            if (opcaoEscolhida == JOptionPane.YES_OPTION) {
                InputStream caminho = getClass().getResourceAsStream("/relatorios/RProduto.jrxml");
                con.EjecutarReporte(caminho);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jMRProdutoActionPerformed

    private void jMRModalidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMRModalidadesActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            String nomeCliente = "Imprimir lista de modalidade versos Horário ?";
            int opcaoEscolhida = JOptionPane.showConfirmDialog(null, nomeCliente, "Confirmacão Inpressao ", JOptionPane.YES_OPTION);

            if (opcaoEscolhida == JOptionPane.YES_OPTION) {
                InputStream caminho = getClass().getResourceAsStream("/relatorios/RModalidade.jrxml");
                con.EjecutarReporteStream(caminho);
            }
        } else if (ut.verificaAcesso("R " + jMRModalidades.getText(), Principal.id)) {
            String nomeCliente = "Imprimir lista de modalidade versos Horário ?";
            int opcaoEscolhida = JOptionPane.showConfirmDialog(null, nomeCliente, "Confirmacão Inpressao ", JOptionPane.YES_OPTION);

            if (opcaoEscolhida == JOptionPane.YES_OPTION) {
                InputStream caminho = getClass().getResourceAsStream("/relatorios/RModalidade.jrxml");
                con.EjecutarReporteStream(caminho);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jMRModalidadesActionPerformed

    private void jMRPresencaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMRPresencaActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            openPresenca();
        } else if (ut.verificaAcesso(jMPresenca.getText(), Principal.id)) {
            openPresenca();
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jMRPresencaActionPerformed

    private void jMRLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMRLogActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            String nomeCliente = "Imprimir a lista de todos os LOG do sistema ";
            int opcaoEscolhida = JOptionPane.showConfirmDialog(null, nomeCliente, "Confirmacão Inpressao ", JOptionPane.YES_OPTION);

            if (opcaoEscolhida == JOptionPane.YES_OPTION) {
                InputStream caminho = getClass().getResourceAsStream("/relatorios/RLog.jrxml");
                con.EjecutarReporte(caminho);
            }
        } else if (ut.verificaAcesso("R " + jMRLog.getText(), Principal.id)) {
            String nomeCliente = "Imprimir a lista de todos os LOG do sistema ";
            int opcaoEscolhida = JOptionPane.showConfirmDialog(null, nomeCliente, "Confirmacão Inpressao ", JOptionPane.YES_OPTION);

            if (opcaoEscolhida == JOptionPane.YES_OPTION) {
                InputStream caminho = getClass().getResourceAsStream("/relatorios/RLog.jrxml");
                con.EjecutarReporte(caminho);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jMRLogActionPerformed

    private void jMRVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMRVendaActionPerformed

        if (ut.checkUserAcessAdmin(Principal.id)) {
            String nomeCliente = "Imprimir a lista de todas vendas do ginásio ";
            int opcaoEscolhida = JOptionPane.showConfirmDialog(null, nomeCliente, "Confirmacão Inpressao ", JOptionPane.YES_OPTION);

            if (opcaoEscolhida == JOptionPane.YES_OPTION) {
                InputStream caminho = getClass().getResourceAsStream("/relatorios/RVenda.jrxml");
                con.EjecutarReporte(caminho);
            }
        } else if (ut.verificaAcesso("R " + jMRVenda.getText(), Principal.id)) {
            String nomeCliente = "Imprimir a lista de todas vendas do ginásio ";
            int opcaoEscolhida = JOptionPane.showConfirmDialog(null, nomeCliente, "Confirmacão Inpressao ", JOptionPane.YES_OPTION);

            if (opcaoEscolhida == JOptionPane.YES_OPTION) {
                InputStream caminho = getClass().getResourceAsStream("/relatorios/RVenda.jrxml");
                con.EjecutarReporte(caminho);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jMRVendaActionPerformed

    private void jMREquipamentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMREquipamentosActionPerformed
        if (ut.checkUserAcessAdmin(Principal.id)) {
            String nomeCliente = "Imprimir a lista de todos os equipamentos do ginásio ";
            int opcaoEscolhida = JOptionPane.showConfirmDialog(null, nomeCliente, "Confirmacão Inpressao ", JOptionPane.YES_OPTION);

            if (opcaoEscolhida == JOptionPane.YES_OPTION) {
                InputStream caminho = getClass().getResourceAsStream("/relatorios/REquipamento.jrxml");
                con.EjecutarReporte(caminho);

            }
        } else if (ut.verificaAcesso("R " + jMREquipamentos.getText(), Principal.id)) {
            String nomeCliente = "Imprimir a lista de todos os equipamentos do ginásio ";
            int opcaoEscolhida = JOptionPane.showConfirmDialog(null, nomeCliente, "Confirmacão Inpressao ", JOptionPane.YES_OPTION);

            if (opcaoEscolhida == JOptionPane.YES_OPTION) {
                InputStream caminho = getClass().getResourceAsStream("/relatorios/REquipamento.jrxml");
                con.EjecutarReporte(caminho);

            }
        } else {
            JOptionPane.showMessageDialog(null, "Você não tem acesso a esse modulo. Por favor contacte o seu administrador!");
        }
    }//GEN-LAST:event_jMREquipamentosActionPerformed

    private void jMenu8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu8ActionPerformed

    private void jMDefinicõesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMDefinicõesActionPerformed
        //obj19.setVisible(true);
    }//GEN-LAST:event_jMDefinicõesActionPerformed

    private void jMFeedBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMFeedBackActionPerformed
        openEnviandoEmail(false);
    }//GEN-LAST:event_jMFeedBackActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        String cam;
        try {
            cam = this.getClass().getProtectionDomain().getCodeSource().getLocation().toURI().getPath();
            cam = cam.substring(1, cam.lastIndexOf('/') + 1);
            File pdfFile = new File(cam + "usermanual/usermanual_pt.pdf");
            if (pdfFile.exists()) {

                if (Desktop.isDesktopSupported()) {
                    Desktop.getDesktop().open(pdfFile);
                } else {
                    System.out.println("Awt Desktop is not supported!");
                }

            } else {
                System.out.println("File is not exists!");
            }

            System.out.println("Done");

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    public void desableCamposViewEmail(boolean desable) {

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Principal().setVisible(true);
            // System.setProperty("java.util.Arrays.useLegacyMergeSort", "true");
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JMenuItem jEmitecartao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuItem jMCopySecurity;
    private javax.swing.JMenuItem jMDefinicões;
    private javax.swing.JMenuItem jMEnviaEmail;
    private javax.swing.JMenuItem jMFeedBack;
    private javax.swing.JMenuItem jMFuncionario;
    private javax.swing.JMenuItem jMLog;
    private javax.swing.JMenuItem jMManutencao;
    private javax.swing.JMenuItem jMPresenca;
    private javax.swing.JMenuItem jMREquipamentos;
    private javax.swing.JMenuItem jMRLog;
    private javax.swing.JMenuItem jMRModalidades;
    private javax.swing.JMenuItem jMRPresenca;
    private javax.swing.JMenuItem jMRProduto;
    private javax.swing.JMenuItem jMRVenda;
    private javax.swing.JMenuItem jMRelRecimento;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu10;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator10;
    private javax.swing.JPopupMenu.Separator jSeparator11;
    private javax.swing.JPopupMenu.Separator jSeparator12;
    private javax.swing.JPopupMenu.Separator jSeparator13;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    private javax.swing.JPopupMenu.Separator jSeparator8;
    private javax.swing.JPopupMenu.Separator jSeparator9;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JButton jbEmail;
    private javax.swing.JButton jbEmail1;
    private javax.swing.JButton jbModalidadel;
    private javax.swing.JButton jbPagamento;
    private javax.swing.JButton jbPresenca;
    private javax.swing.JDesktopPane jdpPrincipal;
    private javax.swing.JLabel jlDate;
    public static javax.swing.JLabel jlDiasVecimento;
    private javax.swing.JMenuItem jmCliente;
    private javax.swing.JMenuItem jmConfEmail;
    private javax.swing.JMenuItem jmEmiteFatura;
    private javax.swing.JMenuItem jmEquip;
    private javax.swing.JMenuItem jmFuncionario;
    private javax.swing.JMenuItem jmModalidade;
    private javax.swing.JMenuItem jmPag;
    private javax.swing.JMenuItem jmProduto;
    private javax.swing.JMenuItem jmRelCliente;
    private javax.swing.JMenuItem jmSair;
    private javax.swing.JMenuItem jmSistema;
    private javax.swing.JMenuItem jmSobre;
    private javax.swing.JMenuItem jmUtilizadores;
    private javax.swing.JMenuItem jmVenda;
    public static javax.swing.JLabel jtUtilizador;
    private org.edisoncor.gui.panel.PanelImage panelImage1;
    private org.edisoncor.gui.panel.PanelImage panelImage3;
    // End of variables declaration//GEN-END:variables

    class hora implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent ae) {
            Calendar now = Calendar.getInstance();
            //jlTime.setText(String.format("%1$tH:%1$tM:%1$tS", now));
        }

    }

    public void openCliente() {
        if (obj.janela == 0) {
            jdpPrincipal.add(obj);
            obj.setVisible(true);
            obj.setPosicao();
            obj.janela++;
        }
    }

    public void openClienteRelatorio() {
        if (obj1.janela == 0) {
            jdpPrincipal.add(obj1);
            obj1.setVisible(true);
            obj1.setPosicao();
            obj1.janela++;
        }
    }

    public void openPresenca() {
        if (obj8.janela == 0) {
            jdpPrincipal.add(obj8);
            obj8.setVisible(true);
            obj8.setPosicao();
            obj8.janela++;
        }
    }

    public void openSobre() {
        if (obj2.janela == 0) {
            jdpPrincipal.add(obj2);
            obj2.setVisible(true);
            obj2.setPosicao();
            obj2.janela++;
        }
    }

    public void openLog() {
        if (obj3.janela == 0) {
            jdpPrincipal.add(obj3);
            obj3.setVisible(true);
            obj3.setPosicao();
            obj3.janela++;
        }
    }

    public void openMatricula() {
        if (obj4.janela == 0) {
            jdpPrincipal.add(obj4);
            obj4.setPosicao();
            obj4.setVisible(true);
            obj4.janela++;
        }
    }

    public void openModaliade() {
        if (obj5.janela == 0) {
            jdpPrincipal.add(obj5);
            obj5.setPosicao();
            obj5.setVisible(true);
            obj5.janela++;
        }
    }

    public void openPagamento() {
        if (obj6.janela == 0) {
            jdpPrincipal.add(obj6);
            obj6.setPosicao();
            obj6.setVisible(true);
            obj6.janela++;
        }
    }

    public void openFuncionario() {
        if (obj7.janela == 0) {
            jdpPrincipal.add(obj7);
            obj7.setPosicao();
            obj7.setVisible(true);
            obj7.janela++;
        }
    }

    public void openProduto() {
        if (obj9.janela == 0) {
            jdpPrincipal.add(obj9);
            obj9.setPosicao();
            obj9.setVisible(true);
            obj9.janela++;
        }
    }

    public void openVenda() {
        if (obj10.janela == 0) {
            jdpPrincipal.add(obj10);
            obj10.setPosicao();
            obj10.setVisible(true);
            obj10.janela++;
        }
    }

    public void openEquipamento() {
        if (obj11.janela == 0) {
            jdpPrincipal.add(obj11);
            obj11.setPosicao();
            obj11.setVisible(true);
            obj11.janela++;
        }
    }

    public void openEmpresa() {
        if (obj12.janela == 0) {
            jdpPrincipal.add(obj12);
            obj12.setPosicao();
            obj12.setVisible(true);
            obj12.janela++;
        }
    }

    public void openUtilizadores() {

        if (obj13.janela == 0) {
            jdpPrincipal.add(obj13);
            obj13.setPosicao();
            obj13.setVisible(true);
            obj13.janela++;
        }
    }

    public void openEmail() {

        if (obj14.janela == 0) {
            jdpPrincipal.add(obj14);
            obj14.setPosicao();
            obj14.setVisible(true);
            obj14.janela++;
        }
    }

    public void openDialogCliente() {
        if (obj15.janela == 0) {
            jdpPrincipal.add(obj15);
            obj15.setVisible(true);
            obj15.janela++;
        }

    }

    public void openEnviandoEmail(boolean desable) {
        if (obj16.janela == 0) {
            jdpPrincipal.add(obj16);
            obj16.setPosicao();
            tfPara.setVisible(desable);
            jLFromEmail.setVisible(desable);
            view.VEnviandoEmail.jComboBoxEmail.setVisible(desable);
            view.VEnviandoEmail.jTEmail.setVisible(desable);
            obj16.setVisible(true);
            obj16.janela++;
        }

    }

    public void openGestRecibo() {
        if (obj20.janela == 0) {
            jdpPrincipal.add(obj20);
            obj20.setPosicao();
            obj20.setVisible(true);
            obj20.janela++;
        }

    }

    public void sairPrograma() throws SQLException {
        int sair = JOptionPane.showConfirmDialog(null, "Confirmar a Operação?", "Sair", JOptionPane.YES_NO_OPTION);
        if (sair == 0) {
            geraHora();
            logController.manutencaoLog("inserir", Principal.id, hora2, "Log Out", new java.sql.Date(ds.getTime()));
            ut.ultimaVisita(Principal.id, new java.sql.Date(ds.getTime()));
            System.exit(0);
        }
    }

    public String geraHora() {
        int s, m, h;
        Calendar calendario = Calendar.getInstance();
        s = calendario.get(Calendar.SECOND);
        m = calendario.get(Calendar.MINUTE);
        h = calendario.get(Calendar.HOUR_OF_DAY);
        hora2 = h + ":" + m + ":" + s;
        return hora2;
    }

}
