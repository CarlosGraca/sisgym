package view;

import controller.ControllerHorario;
import controller.ControllerModalidade;
import java.awt.Dimension;
import java.io.InputStream;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.SpinnerModel;
import persistence.Conexao;
import persistence.DAOModalidade;
import table.ModeloTabelaHorario;
import table.ModeloTabelaModalidade;

public class VModalidade extends javax.swing.JInternalFrame {

    int janela = 0;
    Calendar calendar = Calendar.getInstance();//Variable de Objeto Calendar
    ControllerModalidade controllerModalidade;
    ControllerHorario controllerHorario;
    private String ultimoRegistro = null;
    String codigoLinha;
    int codSemana = 0;
    String index;

    ModeloTabelaModalidade modeloTabelaModalidade;
    ModeloTabelaHorario modeloTabelaHorario;

    public VModalidade() {

        initComponents();

//        HoraFim();
        Horainicio();

        jbNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbNovo.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jbNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jbGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbGuardar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jbGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jbCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbCancelar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jbCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jbEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbEditar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jbEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jbApagar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbApagar.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jbApagar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jbImprimir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbImprimir.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jbImprimir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        getRootPane().setDefaultButton(jBPesquisar);
        
        jLabel6.setVisible(false);
        jtMod_cod.setVisible(false);
    }

    public void UtlimoRegistro() {
        try {
            ultimoRegistro = controllerModalidade.getUltimoRegistro().getString("idModalidade");
            JOptionPane.showMessageDialog(this, ultimoRegistro);
        } catch (SQLException ex) {
            Logger.getLogger(VModalidade.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jbNovo = new javax.swing.JButton();
        jbGuardar = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();
        jbApagar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbImprimir = new javax.swing.JButton();
        jTabMod = new javax.swing.JTabbedPane();
        jpModi_listar = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtModalidade = new javax.swing.JTable();
        jtPesquisar = new javax.swing.JTextField();
        jBPesquisar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jbAdd_horario = new javax.swing.JButton();
        jbRem_horario = new javax.swing.JButton();
        jsHorario_inicio = new com.toedter.calendar.JSpinnerDateEditor();
        jsHorario_fim = new com.toedter.calendar.JSpinnerDateEditor();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jbEd_horario = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTHorario = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTDiasSemana = new javax.swing.JTree();
        jpMod_dados = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jtMod_cod = new javax.swing.JTextField();
        jtMod_nome = new javax.swing.JTextField();
        jtMod_valor = new javax.swing.JTextField();
        jlVerificarValor = new javax.swing.JLabel();
        jlVerificarNome = new javax.swing.JLabel();
        jlVerificarVal = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Manutenção de Modalidade e Horários");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Opções");

        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Add.png"))); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/salvar.png"))); // NOI18N
        jbGuardar.setText("Guardar");
        jbGuardar.setEnabled(false);
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Modify.png"))); // NOI18N
        jbEditar.setText("Editar");
        jbEditar.setEnabled(false);
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbApagar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Remove.png"))); // NOI18N
        jbApagar.setText("Apagar");
        jbApagar.setEnabled(false);
        jbApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbApagarActionPerformed(evt);
            }
        });

        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Close.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setEnabled(false);
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagem/Print.png"))); // NOI18N
        jbImprimir.setText("Imprimir");
        jbImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jbEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbApagar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbNovo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbNovo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbApagar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbImprimir)
                .addGap(20, 20, 20))
        );

        jTabMod.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTabMod.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabModMouseClicked(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Modalidade"));

        jtModalidade.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jtModalidade.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtModalidadeMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtModalidade);

        jBPesquisar.setText("Pesquisar");
        jBPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jtPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBPesquisar)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Horário"));

        jbAdd_horario.setText("Adicionar");
        jbAdd_horario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdd_horarioActionPerformed(evt);
            }
        });

        jbRem_horario.setText("Remover");
        jbRem_horario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRem_horarioActionPerformed(evt);
            }
        });

        jsHorario_inicio.setDate(new java.util.Date(1439575687000L));

        jsHorario_fim.setDate(new java.util.Date(1439575687000L));

        jLabel16.setText("Hora Inicio");

        jLabel17.setText("Hora Fim");

        jbEd_horario.setText("Alterar");
        jbEd_horario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEd_horarioActionPerformed(evt);
            }
        });

        jScrollPane4.setPreferredSize(new java.awt.Dimension(452, 100));

        jTHorario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTHorario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTHorarioMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTHorario);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Semana");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Segunda-Feira");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Terça-Feira");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Quarta-Feira");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Quinta-Feira");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Sexta-Feira");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Sábado");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Domingo");
        treeNode1.add(treeNode2);
        jTDiasSemana.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jTDiasSemana.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTDiasSemanaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTDiasSemana);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jsHorario_inicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(63, 63, 63)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jsHorario_fim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jbAdd_horario, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(jbRem_horario, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(jbEd_horario, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(55, 55, 55))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSeparator2))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jsHorario_inicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)
                            .addComponent(jsHorario_fim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbAdd_horario)
                            .addComponent(jbRem_horario)
                            .addComponent(jbEd_horario))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout jpModi_listarLayout = new javax.swing.GroupLayout(jpModi_listar);
        jpModi_listar.setLayout(jpModi_listarLayout);
        jpModi_listarLayout.setHorizontalGroup(
            jpModi_listarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpModi_listarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpModi_listarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpModi_listarLayout.setVerticalGroup(
            jpModi_listarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpModi_listarLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabMod.addTab("Lista de Modalidades", jpModi_listar);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Informações de modalidades"));

        jLabel2.setText("Nome");

        jLabel6.setText("Codigo");

        jLabel8.setText("Valor");

        jtMod_cod.setEditable(false);

        jtMod_nome.setEditable(false);

        jtMod_valor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtMod_valorKeyTyped(evt);
            }
        });

        jlVerificarValor.setFont(new java.awt.Font("Tahoma", 2, 11)); // NOI18N
        jlVerificarValor.setForeground(new java.awt.Color(204, 0, 0));
        jlVerificarValor.setText("Apenas numero");

        jlVerificarNome.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlVerificarNome.setForeground(new java.awt.Color(204, 0, 0));
        jlVerificarNome.setText("*");

        jlVerificarVal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlVerificarVal.setForeground(new java.awt.Color(204, 0, 0));
        jlVerificarVal.setText("*");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlVerificarNome)
                    .addComponent(jlVerificarVal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtMod_nome, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jtMod_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jlVerificarValor))
                            .addComponent(jtMod_cod, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 388, Short.MAX_VALUE)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jtMod_cod, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtMod_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlVerificarNome))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jtMod_valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlVerificarValor)
                    .addComponent(jlVerificarVal))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpMod_dadosLayout = new javax.swing.GroupLayout(jpMod_dados);
        jpMod_dados.setLayout(jpMod_dadosLayout);
        jpMod_dadosLayout.setHorizontalGroup(
            jpMod_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jpMod_dadosLayout.setVerticalGroup(
            jpMod_dadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMod_dadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(364, Short.MAX_VALUE))
        );

        jTabMod.addTab("Modalidades", jpMod_dados);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabMod)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabMod)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        validar(true);
        validarVazio(true);
        controllerModalidade = new ControllerModalidade();
        controllerHorario = new ControllerHorario();
        controllerModalidade.preencherJTabelaModalidade();
        jbRem_horario.setEnabled(false);
        jbEd_horario.setEnabled(false);
        jTabMod.setEnabledAt(1, false);
    }//GEN-LAST:event_formInternalFrameOpened

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        ativarDesativaBotoes(true);
        jbNovo.setEnabled(false);
        ativarDesativarClienteCampos(true);
    }//GEN-LAST:event_jbEditarActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        janela = 0;
        validar(true);
        validarVazio(true);
    }//GEN-LAST:event_formInternalFrameClosing

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        jTabMod.setEnabledAt(1, true);
        jTabMod.setSelectedComponent(jpMod_dados);
        ativarDesativaBotoes(true);
        ativarDesativarClienteCampos(true);
        limparClienteCampos();
        jbNovo.setEnabled(false);
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jTabModMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabModMouseClicked
        if (jTabMod.getSelectedIndex() == 1) {
            ativarDesativaBotoes(true);
            ativarDesativarClienteCampos(true);
            jbNovo.setEnabled(false);
        }
    }//GEN-LAST:event_jTabModMouseClicked

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        if (jtMod_cod.getText().equals("")) {
            if (controllerModalidade.manutencaoModalidade("inserir", jtMod_cod.getText(), jtMod_nome.getText(), jtMod_valor.getText())) {
                ativarDesativarClienteCampos(false);
                validar(true);
                limparClienteCampos();
                ativarDesativaBotoes(true);
                destivarAtivarBotoes2(true);
                validarVazio(true);

            } else {
            }

        } else {
            if (validarCampos()) {
                controllerModalidade.manutencaoModalidade("alterar", jtMod_cod.getText(), jtMod_nome.getText(), jtMod_valor.getText());
                validar(true);
                limparClienteCampos();
                ativarDesativaBotoes(true);
                destivarAtivarBotoes2(true);
                validarVazio(true);
            }
        }
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        limparClienteCampos();
        jbGuardar.setEnabled(false);
        jbCancelar.setEnabled(false);
        jbEditar.setEnabled(false);
        jbApagar.setEnabled(false);
        ativarDesativarClienteCampos(false);        
        jbNovo.setEnabled(true);
        jTabMod.setEnabledAt(1, false);
        jTabMod.setSelectedIndex(0);
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jtMod_valorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtMod_valorKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9') {
            evt.consume();
            validar(false);
        }
    }//GEN-LAST:event_jtMod_valorKeyTyped

    private void jbApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbApagarActionPerformed
        controllerModalidade.manutencaoModalidade("excluir", jtMod_cod.getText(), jtMod_nome.getText(), jtMod_valor.getText());
        limparClienteCampos();
        ativarDesativaBotoes(true);
        destivarAtivarBotoes2(true);
    }//GEN-LAST:event_jbApagarActionPerformed

    private void jtModalidadeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtModalidadeMouseClicked

        if (evt.getClickCount() == 2) {

            jTabMod.setSelectedComponent(jpMod_dados);
            ativarDesativaBotoes(false);
            ativarDesativarClienteCampos(false);
            controllerModalidade.manutencaoPesquisa();
        }

        if (evt.getClickCount() == 1) {
            jbRem_horario.setEnabled(false);
            jbEd_horario.setEnabled(false);

            ModeloTabelaModalidade model = (ModeloTabelaModalidade) jtModalidade.getModel();
            String id = (String) model.getValueAt(jtModalidade.getSelectedRow(), 0);
            index = id;
            controllerHorario.preencherJTabelaHorario(id);

        }

    }//GEN-LAST:event_jtModalidadeMouseClicked

    private void jbRem_horarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRem_horarioActionPerformed

        ModeloTabelaHorario model = (ModeloTabelaHorario) jTHorario.getModel();
        String id = (String) model.getValueAt(jTHorario.getSelectedRow(), 0);
        try {
            controllerHorario.manutencaoHorario("excluir", Integer.parseInt(id), 0, 0, new java.sql.Timestamp(jsHorario_inicio.getDate().getTime()), new java.sql.Timestamp(jsHorario_fim.getDate().getTime()));
        } catch (Exception ex) {
            Logger.getLogger(VModalidade.class.getName()).log(Level.SEVERE, null, ex);
        }
        controllerHorario.preencherJTabelaHorario(index);
    }//GEN-LAST:event_jbRem_horarioActionPerformed

    private void jbAdd_horarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdd_horarioActionPerformed
        try {

            if (jTDiasSemana.isSelectionEmpty()) {
                JOptionPane.showMessageDialog(null, "Selecione o dia de semana");
            } else if (!jTDiasSemana.getLastSelectedPathComponent().toString().equalsIgnoreCase("Semana")) {

                codSemana = controllerModalidade.getDiaSemanaCodigo(jTDiasSemana.getLastSelectedPathComponent().toString());

                ModeloTabelaModalidade model = (ModeloTabelaModalidade) jtModalidade.getModel();
                String id = (String) model.getValueAt(jtModalidade.getSelectedRow(), 0);

                int idModal = Integer.parseInt(id);

                controllerHorario.manutencaoHorario("inserir", 1, idModal, codSemana, new java.sql.Timestamp(jsHorario_inicio.getDate().getTime()), new java.sql.Timestamp(jsHorario_fim.getDate().getTime()));
                controllerHorario.preencherJTabelaHorario(id);
            }
        } catch (Exception ex) {
            Logger.getLogger(VModalidade.class.getName()).log(Level.SEVERE, null, ex);

        }
    }//GEN-LAST:event_jbAdd_horarioActionPerformed

    private void jTHorarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTHorarioMouseClicked
        if (evt.getClickCount() >= 1) {
            jbRem_horario.setEnabled(true);
            jbEd_horario.setEnabled(true);

            ModeloTabelaHorario model = (ModeloTabelaHorario) jTHorario.getModel();
            String id = (String) model.getValueAt(jTHorario.getSelectedRow(), 0);
            controllerHorario.prencherDadosHorario(id);
        }
    }//GEN-LAST:event_jTHorarioMouseClicked

    private void jbEd_horarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEd_horarioActionPerformed
        try {
            ModeloTabelaHorario model = (ModeloTabelaHorario) jTHorario.getModel();
            String id = (String) model.getValueAt(jTHorario.getSelectedRow(), 0);

            controllerHorario.manutencaoHorario("editar", Integer.parseInt(id), 0, 0, new java.sql.Timestamp(jsHorario_inicio.getDate().getTime()), new java.sql.Timestamp(jsHorario_fim.getDate().getTime()));
            controllerHorario.preencherJTabelaHorario(index);
        } catch (Exception ex) {
            Logger.getLogger(VModalidade.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbEd_horarioActionPerformed

    private void jBPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBPesquisarActionPerformed
        controllerModalidade.pesquisaModalidade(jtPesquisar.getText(), "Nome");
    }//GEN-LAST:event_jBPesquisarActionPerformed

    private void jTDiasSemanaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTDiasSemanaMouseClicked
        if (!jTDiasSemana.getLastSelectedPathComponent().toString().equalsIgnoreCase("Semana")) {
            controllerHorario.preencherJTabelaHorarioSemana(jTDiasSemana.getLastSelectedPathComponent().toString());
        }
    }//GEN-LAST:event_jTDiasSemanaMouseClicked

    private void jbImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimirActionPerformed
        Conexao con = new Conexao();
        String nomeCliente = "Imprimir lista de modalidade versos Horário ?";
        int opcaoEscolhida = JOptionPane.showConfirmDialog(null, nomeCliente, "Confirmacão Inpressao ", JOptionPane.YES_OPTION);

        if (opcaoEscolhida == JOptionPane.YES_OPTION) {
            InputStream caminho = getClass().getResourceAsStream("/relatorios/RModalidade.jrxml");
            con.EjecutarReporteStream(caminho);  
        }
    }//GEN-LAST:event_jbImprimirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTree jTDiasSemana;
    public static javax.swing.JTable jTHorario;
    public static javax.swing.JTabbedPane jTabMod;
    private javax.swing.JButton jbAdd_horario;
    private javax.swing.JButton jbApagar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbEd_horario;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbImprimir;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbRem_horario;
    private javax.swing.JLabel jlVerificarNome;
    private javax.swing.JLabel jlVerificarVal;
    private javax.swing.JLabel jlVerificarValor;
    private javax.swing.JPanel jpMod_dados;
    private javax.swing.JPanel jpModi_listar;
    public static com.toedter.calendar.JSpinnerDateEditor jsHorario_fim;
    public static com.toedter.calendar.JSpinnerDateEditor jsHorario_inicio;
    public static javax.swing.JTextField jtMod_cod;
    public static javax.swing.JTextField jtMod_nome;
    public static javax.swing.JTextField jtMod_valor;
    public static javax.swing.JTable jtModalidade;
    private javax.swing.JTextField jtPesquisar;
    // End of variables declaration//GEN-END:variables
    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    public void limparClienteCampos() {
        jtMod_cod.setText("");
        jtMod_nome.setText("");
        jtMod_valor.setText("");

    }

    public void ativarDesativarClienteCampos(boolean habilitar) {
        jtMod_nome.setEditable(habilitar);
        jtMod_valor.setEditable(habilitar);
    }

    public void ativarDesativaBotoes(boolean habilitar) {
        jbGuardar.setEnabled(habilitar);
        jbCancelar.setEnabled(!habilitar);
        jbNovo.setEnabled(habilitar);
        jbEditar.setEnabled(!habilitar);
        jbApagar.setEnabled(!habilitar);
        jbImprimir.setEnabled(!habilitar);
    }

    public void destivarAtivarBotoes2(Boolean habilitar) {
        jbGuardar.setEnabled(!habilitar);
        jbCancelar.setEnabled(!habilitar);
        jbNovo.setEnabled(habilitar);
    }

    private boolean validarCampos() {
        if (jtMod_nome.getText().equals("")) {
            // JOptionPane.showMessageDialog(null, "Todos os campos são obrigatório! Preencha os vazios", "Validação de Campos.", JOptionPane.ERROR_MESSAGE);
            jlVerificarNome.setVisible(true);
            jtMod_nome.requestFocus();
            return false;
        }
        if (jtMod_valor.getText().equals("")) {
            jlVerificarVal.setVisible(true);
            jtMod_valor.requestFocus();
            return false;
        }
        return true;

    }

    private void Horainicio() {
        Date inicio = calendar.getTime();
        //Indicamos ano estamos -100 de actual
        calendar.add(Calendar.YEAR, -100);
        //Guardamos a configuracao  em um DATE
        Date dataAnterior = calendar.getTime();
        //Indicamos ano estamos +200 de actual
        calendar.add(Calendar.YEAR, 200);
        //Guardamos a configuracao  em um DATE
        Date dataPosterior = calendar.getTime();

        SpinnerModel horaModel = new SpinnerDateModel(inicio, dataAnterior, dataPosterior, Calendar.HOUR);
        //Indicamos o model para cada Spinner e o formato de hora.
        SpinnerModel horaModel1 = new SpinnerDateModel(inicio, dataAnterior, dataPosterior, Calendar.HOUR);
        //Indicamos o model para cada Spinner e o formato de hora.

        jsHorario_inicio.setModel(horaModel);
        jsHorario_inicio.setEditor(new JSpinner.DateEditor(jsHorario_inicio, "HH:mm"));//:ss
        jsHorario_fim.setModel(horaModel1);
        jsHorario_fim.setEditor(new JSpinner.DateEditor(jsHorario_fim, "HH:mm"));//:ss

        Date inicio1 = calendar.getTime();

//        //Indicamos ano estamos -100 de actual
//        calendar.add(Calendar.YEAR, -100);
//        //Guardamos a configuracao  em um DATE
//        Date dataAnterior1 = calendar.getTime();
//        //Indicamos ano estamos +200 de actual
//        calendar.add(Calendar.YEAR, 200);
//        //Guardamos a configuracao  em um DATE
//        Date dataPosterior1 = calendar.getTime();
//        
//        SpinnerModel horaModel1 = new SpinnerDateModel(inicio1, dataAnterior1, dataPosterior1, Calendar.HOUR);
//        //Indicamos o model para cada Spinner e o formato de hora.
//        
//        
//        jsHorario_fim.setModel(horaModel1);
//        jsHorario_fim.setEditor(new JSpinner.DateEditor(jsHorario_fim, "HH:mm:ss"));
    }

    private void validar(Boolean valid) {
        jlVerificarValor.setVisible(!valid);
    }

    private void validarVazio(Boolean valid) {
        jlVerificarNome.setVisible(!valid);
        jlVerificarVal.setVisible(!valid);
    }

}
